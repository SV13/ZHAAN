import os
import hashlib
import pandas as pd
from colorama import Fore, Style, init

init(autoreset=True)

HASH_DATASET = os.path.join("data", "mal.csv")

# Load the malware hash dataset
def load_hash_dataset():
    try:
        df = pd.read_csv(HASH_DATASET)
        df = df[["file_name", "sha256_hash", "md5_hash", "sha1_hash", "signature", "vtpercent"]].dropna()
        return df
    except Exception as e:
        print(Fore.RED + f"[!] Failed to load hash dataset: {e}")
        return None

# Compute hashes for a file
def compute_file_hashes(filepath):
    try:
        with open(filepath, "rb") as f:
            file_data = f.read()
            sha256 = hashlib.sha256(file_data).hexdigest()
            md5 = hashlib.md5(file_data).hexdigest()
            sha1 = hashlib.sha1(file_data).hexdigest()
            return sha256, md5, sha1
    except Exception as e:
        print(Fore.RED + f"[!] Failed to compute hashes: {e}")
        return None, None, None

# Perform scan on all files in the folder
def scan_folder(folder_path, df):
    print(Fore.YELLOW + f"\n[+] Scanning all files in: {folder_path}\n")
    malicious_files = []

    for root, _, files in os.walk(folder_path):
        for file in files:
            full_path = os.path.join(root, file)
            sha256, md5, sha1 = compute_file_hashes(full_path)
            if not sha256:
                continue

            match = df[(df['sha256_hash'] == sha256) |
                       (df['md5_hash'] == md5) |
                       (df['sha1_hash'] == sha1)]

            if not match.empty:
                malware_info = match.iloc[0]
                malicious_files.append({
                    "file_path": full_path,
                    "md5": malware_info['md5_hash'],
                    "sha1": malware_info['sha1_hash'],
                    "sha256": malware_info['sha256_hash'],
                    "signature": malware_info['signature'],
                    "vtpercent": malware_info['vtpercent']
                })

    if malicious_files:
        print(Fore.RED + "!!! Malicious files found !!!\n")
        for malware in malicious_files:
            print(Fore.RED + f"File: {malware['file_path']}")
            print(Fore.RED + f"Signature: {malware['signature']}")
            print(Fore.RED + f"MD5     : {malware['md5']}")
            print(Fore.RED + f"SHA1    : {malware['sha1']}")
            print(Fore.RED + f"SHA256  : {malware['sha256']}")
            print(Fore.RED + f"VT Detect %: {malware['vtpercent']}\n")
    else:
        print(Fore.GREEN + "\nNo malicious files found in the folder.")

# Main function to run malware scan
def run_malware_scan():
    df = load_hash_dataset()
    if df is None:
        return

    while True:
        folder_path = input(Fore.CYAN + "\nEnter the folder path to scan: ").strip('"')
        if not os.path.isdir(folder_path):
            print(Fore.RED + "[!] Invalid folder path. Please try again.")
            continue

        scan_folder(folder_path, df)

        choice = input(Fore.YELLOW + "\nDo you want to scan another folder?\n[1] Yes\n[2] No\nSelect: ").strip()
        if choice != "1":
            break
